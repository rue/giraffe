#!/usr/bin/env ruby

libdir = File.join File.dirname(__FILE__), "..", "lib"
$LOAD_PATH.unshift(File.dirname(__FILE__), "..")
$LOAD_PATH.unshift libdir if File.directory? libdir


require "giraffe/git"
require "giraffe/environment"

require "sinatra/lib/sinatra"

require "giraffe/hacks"
require "giraffe/page"

require "rubygems"
  require "rdiscount"
  require "rubypants"


# Authentication.
#
before do
  authenticate Giraffe.authenticator if Giraffe.authenticator
end


  # Resource mapping


# Default page.
#
get('/') { redirect Giraffe.home }


# Pages handled at bottom due to wildcarding


# Page editor.
#
get "/e/*:page" do
  @page = Page.from_uri params[:splats].first, params[:page]
  show :edit, "Editing #{@page.name}"
end

# Process edit.
#
post "/e/*:page" do
  @page = Page.from_uri params[:splats].first, params[:page]
  @page.update(params[:body], params[:message])

  redirect '/' + @page.name
end

# Show page as it was in given revision.
#
get '/h/*:page/:commit' do
  Giraffe.wiki = Giraffe.wiki.at params[:commit]
  @page = Page.from_uri params[:splats].first, params[:page]

  show :show, "#{@page.pretty_name.last} (in #{params[:commit]})"
end

# Show page history.
#
get '/h/*:page' do
  @page = Page.from_uri params[:splats].first, params[:page]
  @commits = @page.object.commits 30

  show :page_history, "History of #{@page.pretty_name.last}"
end

# Show diff of page revision to HEAD
#
get '/d/*:page/:commit' do
  @page = Page.from_uri params[:splats].first, params[:page]
  @diff = @page.object.diff params[:commit]

  @commit = @params[:commit][0..7] + "..."

  show :delta, "Diff of #{@page.pretty_name.last} against #{params[:commit]}"
end

# Wiki history
#
get '/a/history' do
  @history = Giraffe.wiki.commits 30
  show :history, "Wiki History"
end

# Toplevel page listing
#
get "/a/list" do
  @objects = Giraffe.wiki.objects
  show :list, "All pages"
end

# Subdirectory page listing
#
get "/a/list/*" do
  @subdir = params[:splats].first.chomp "/"
  @objects = Giraffe.wiki.object_for(@subdir).objects

  show :list, "Pages Under #{@subdir}/"
end

# Raw, unrendered text from the file.
#
get "/a/raw/*:page" do
  @page = Page.from_uri params[:splats].first, params[:page]

  headers 'Content-Type' => 'text/plain;charset=utf-8'
  send_data @page.raw_body, :type => 'text/plain', :disposition => 'inline'
end

# Search
#
get '/a/search' do
  @search = params[:search]
  @matches = Giraffe.wiki.grep @search

  show :search, 'Search Results'
end

# Generate patchfile for diff
#
get "/a/patch/*:page/:commit" do
  diff = Page.from_uri(params[:splats].first, params[:page]).object.diff params[:commit]

  header "Content-Type"         => "text/x-diff"
  header "Content-Disposition"  => "filename=patch.diff"

  send_data diff, :type => "text/x-diff", :disposition => "inline"
end

  # These come last since they could match anything

# Show page in or send to create.
#
get "/*:page" do
  @page = Page.from_uri params[:splats].first, params[:page] rescue redirect "/a/list"

  redirect "/a/list/#{@page.name}" if @page.directory?

  if @page.exists? then show :show, @page.name else redirect "/e/" + @page.name end
end


# support methods


private

  def show(template, title)
    @title = title
    erb(template)
  end

